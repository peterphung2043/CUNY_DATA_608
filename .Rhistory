title = "Adjusted Close Stock Prices")
PBS %>%
filter(ATC2 == "A01" & Concession == "Concessional") %>%
select(Month, Concession, Type, Cost) %>%
summarise(Cost = sum(Cost)) %>%
autoplot(Cost)
vic_elec %>%
autoplot(Temperature) +
labs(y = "Degrees Celsius",
title = "Half-hourly temperatures: Melbourne, Australia")
pelt_hare_plot <- pelt %>%
autoplot(Hare)
pelt_lynx_plot <- pelt %>%
autoplot(Lynx)
pelt_hare_plot + pelt_lynx_plot
gafa_stock %>%
group_by(Symbol) %>%
filter(Close == max(Close)) %>%
select(Date)
tute1 <- readr::read_csv("https://bit.ly/fpptute1")
View(tute1)
mytimeseries <- tute1 %>%
mutate(Quarter = yearquarter(Quarter)) %>%
as_tsibble(index = Quarter)
mytimeseries %>%
pivot_longer(-Quarter) %>%
ggplot(aes(x = Quarter, y = value, colour = name)) +
geom_line() +
facet_grid(name ~ ., scales = "free_y")
mytimeseries %>%
pivot_longer(-Quarter) %>%
ggplot(aes(x = Quarter, y = value, colour = name)) +
geom_line()
us_total %>%
as_tibble(
index = year,
key = state
)
us_total %>%
as_tibble(index = year, key = state) %>%
filter(state %in% c("Maine", "Vermont", "New Hampshire", "Massachusetts", "Connecticut", "Rhode Island")) %>%
group_by(state) %>%
ggplot(aes(x = year, y = y)) +
geom_line() +
facet_grid(vars(state), scales = "free_y") +
labs(title = "Natural Gas Consumption by State for the New England Area",
y = "Yearly Natural Gas Consumption (million cubic feet)")
GET("https://bit.ly/fpptourism", write_disk(TF <- tempfile(fileext = ".xlsx")))
tourism_imported <- readxl::read_excel(TF)
tourism_imported %>%
mutate(Quarter = yearquarter(Quarter))
tourism
us_total %>%
as_tsibble(
index = year,
key = state
)
us_total %>%
as_tsibble(
index = year,
key = state
)
us_total %>%
as_tsibble(index = year, key = state) %>%
filter(state %in% c("Maine", "Vermont", "New Hampshire", "Massachusetts", "Connecticut", "Rhode Island")) %>%
group_by(state) %>%
ggplot(aes(x = year, y = y)) +
geom_line() +
facet_grid(vars(state), scales = "free_y") +
labs(title = "Natural Gas Consumption by State for the New England Area",
y = "Yearly Natural Gas Consumption (million cubic feet)")
tourism_imported %>%
mutate(Quarter = yearquarter(Quarter)) %>%
as_tsibble(key = c(Region, State, Purpose),
index = Quarter)
tourism_imported_tsibble <- tourism_imported %>%
mutate(Quarter = yearquarter(Quarter)) %>%
as_tsibble(key = c(Region, State, Purpose),
index = Quarter)
tourism_imported_tsibble <- tourism_imported %>%
mutate(Quarter = yearquarter(Quarter)) %>%
as_tsibble(key = c(Region, State, Purpose),
index = Quarter)
tourism_imported_tsibble
tourism imported_tsibble
tourism_imported_tsibble
tourism
?tourism
tourism %>%
group_by(c(Region, Purpose))
tourism %>%
group_by(Region, Purpose)
tourism %>%
group_by(Region, Purpose) %>%
filter(max(Trips))
tourism %>%
group_by(Region, Purpose) %>%
filter(Trips == max(Trips))
tourism %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = mean(Trips))
tourism %>%
group_by(Region, Purpose)
tourism %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips))
tourism %>%
group_by(Region, Purpose)
tourism %>%
group_by(Region, Purpose) %>%
summarise(sum_trips = sum(Trips), .groups = 'drop')
tourism %>%
group_by(Region, Purpose)
tourism %>%
group_by(Region, Purpose) %>%
summarise(frequency = sum(Trips)))
tourism %>%
group_by(Region, Purpose) %>%
summarise(frequency = sum(Trips))
tourism %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips))
tourism %>%
select(-Quarter) %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips))
tourism %>%
select(-Quarter)
tourism %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips))
tourism %>% as.data.frame()
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips))
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips)) %>%
arrange(Avg_trips)
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = sum(Trips)) %>%
arrange(desc(Avg_trips))
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = mean(Trips)) %>%
arrange(desc(Avg_trips))
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose) %>%
summarise(Avg_trips = mean(Trips)) %>%
arrange(desc(Avg_trips)) %>%
head(5)
tourism
tourism %>%
group_by(Region, Purpose) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame() %>%
group_by(State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame()
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose)
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
as_tsibble()
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
as_tsibble(index = c(Region, Purpose))
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
as_tsibble()
tourism %>%
as_data_frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
as_tsibble(index = Region)
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
group_by(State) %>%
summarise(Total_Trips_By_State = sum(Trips))
tourism %>%
group_by(State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
head(5)
tourism %>%
as.data.frame() %>%
group_by(Region, Purpose, State) %>%
summarise(Total_Trips_By_State = sum(Trips)) %>%
head(5)
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
View(myseries)
myseries %>%
autoplot()
myseries %>%
gg_season()
myseries %>%
gg_season(labels = "both")
myseries %>%
gg_subseries()
myseries %>%
gg_lag()
myseries %>%
gg_lag(geom = "point")
?gg_lag
myseries %>%
gg_lag(geom = "point", lags = 1:12)
myseries %>%
gg_subseries()
myseries %>%
gg_season(labels = "both")
myseries %>% ACF() %>% autoplot()
myseries
myseries %>%
ACF(Turnover, lag_max = 12) %>%
autoplot()
myseries %>%
ACF(Turnover, lag_max = 24) %>%
autoplot()
myseries %>%
ACF(Turnover, lag_max = 36) %>%
autoplot()
myseries %>%
autoplot()
setwd("~/MSDS CUNY SPS/DATA 608/CUNY_DATA_608")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("seasonal")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
x11_dcmp %>%
ggplot(aes(x = Month)) +
geom_line(aes(y = Employed, colour = "Data"))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
us_employment
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(us_retail_employment)
setwd("~/MSDS CUNY SPS/DATA 624/Homework 2")
knitr::opts_chunk$set(echo = TRUE)
library(fpp3)
library(dplyr)
global_economy
global_economy %>%
filter(Country == "Australia") %>%
autoplot(GDP/Population) +
labs(title= "GDP per capita", y = "$US")
global_economy %>%
autoplot(GDP/Population) +
labs(title= "GDP per capita", y = "$US")
global_economy %>%
autoplot(GDP/Population)
??autoplot
global_economy %>%
autoplot(GDP/Population, show.legend = FALSE)
global_economy %>%
mutate(GDP_per_capita = GDP/Population)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
filter(GDP == max(GDP))
global_economy %>%
mutate(GDP_per_capita = GDP/Population)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
filter(GDP_per_capita == max(GDP_per_capita))
global_economy %>%
mutate(GDP_per_capita = GDP/Population)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
autoplot(GDP/Population)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
autoplot(GDP/Population)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
mutate(GDP_per_capita = GDP/Population,
`5-MA` = slider::slide_dbl(GDP_per_capita, mean, .before = 2, .after = 2, .complete = TRUE)) %>%
autoplot(GDP_per_capita) +
geom_line(aes(y = `5-MA`), colour = "#D55E00") +
labs(y = "GDP Per Capita",
title = "Monaco GDP Per Capita Time Series") +
guides(colour = guide_legend(title = "series"))
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
mutate(GDP_per_capita = GDP/Population,
`5-MA` = slider::slide_dbl(GDP_per_capita, mean, .before = 2, .after = 2, .complete = TRUE)) %>%
autoplot(GDP_per_capita, colour = "gray") +
geom_line(aes(y = `5-MA`), colour = "#D55E00") +
labs(y = "GDP Per Capita",
title = "Monaco GDP Per Capita Time Series") +
guides(colour = guide_legend(title = "series"))
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
mutate(GDP_per_capita = GDP/Population,
`5-MA` = slider::slide_dbl(GDP_per_capita, mean, .before = 2, .after = 2, .complete = TRUE)) %>%
autoplot(GDP_per_capita) +
geom_line(aes(y = `5-MA`), colour = "#D55E00") +
labs(y = "GDP Per Capita",
title = "Monaco GDP Per Capita Time Series") +
guides(colour = guide_legend(title = "series"))
global_economy
global_economy %>%
filter(Country == "United States") %>%
autoplot(GDP)
global_economy %>%
filter(Country == "United States") %>%
autoplot(GDP, title = "GDP of the United States")
global_economy %>%
filter(Country == "United States") %>%
autoplot(GDP) +
labs(title = "GDP of the United States")
global_economy %>%
filter(Country == "United States") %>%
mutate(GDP_per_capita = GDP/Population) %>%
autoplot(GDP_per_capita) +
labs(title = "GDP Per Capita of the United States")
aus_livestock
aus_livestock$State
aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers" & State == "Victoria")
aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers" & State == "Victoria") %>%
autoplot(Count)
aus_livestock
aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers" & State == "Victoria") %>%
autoplot(Count) +
labs(title = "Slaughter of Victorian Bulls, Bullocks and Steers")
knitr::opts_chunk$set(echo = TRUE)
library(fpp3)
library(dplyr)
global_economy %>%
autoplot(GDP/Population, show.legend = FALSE)
global_economy %>%
mutate(GDP_per_capita = GDP/Population) %>%
top_n(n = 1)
global_economy %>%
filter(Country == "Monaco") %>%
mutate(GDP_per_capita = GDP/Population,
`5-MA` = slider::slide_dbl(GDP_per_capita, mean, .before = 2, .after = 2, .complete = TRUE)) %>%
autoplot(GDP_per_capita) +
geom_line(aes(y = `5-MA`), colour = "#D55E00") +
labs(y = "GDP Per Capita",
title = "Monaco GDP Per Capita Time Series") +
guides(colour = guide_legend(title = "series"))
lambda <- aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers" & State == "Victoria") %>%
features(Count, features = guerrero) %>%
pull(lambda_guerrero)
aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers" & State == "Victoria") %>%
autoplot(box_cox(Count, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed Count with $\\lambda$ = ",
round(lambda,2))))
vic_elec
vic_elec %>%
autoplot(Demand) %>%
labs(title = "Victorian Electricity Demand")
aus_production
aus_production %>%
autoplot(Gas) %>%
labs(title = "Gas Production")
aus_production %>%
autoplot(Gas) %>%
labs(title = "Gas Production")
lambda <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed gas production with $\\lambda$ = ",
round(lambda,2))))
canadian_gas
canadian_gas %>%
autoplot(Volume)
canadian_gas %>%
autoplot(Volume)
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
myseries %>%
autoplot()
View(myseries)
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
lambda <- myseries %>%
features(Turnover, features = guerrero) %>%
pull(lambda_guerrero)
myseries %>%
autoplot(box_cox(Turnover, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed turnover with $\\lambda$ = ",
round(lambda,2))))
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
lambda <- myseries %>%
features(Turnover, features = guerrero) %>%
pull(lambda_guerrero)
myseries %>%
autoplot(box_cox(Turnover, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed turnover with $\\lambda$ = ",
round(lambda,2))))
set.seed(23987)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
myseries %>%
autoplot()
aus_production
aus_production %>%
autoplot(Tobacco)
aus_production %>%
autoplot(Tobacco)
lambda <- aus_production %>%
features(Tobacco, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Tobacco, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed Tobacco with $\\lambda$ = ",
round(lambda,2))))
lambda <- aus_production %>%
features(Tobacco, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Tobacco, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed Tobacco with $\\lambda$ = ",
round(lambda,2))))
ansett
